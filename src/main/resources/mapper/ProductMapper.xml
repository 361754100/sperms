<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.smart.sperms.dao.mapper.ProductMapper" >
  <resultMap id="BaseResultMap" type="com.smart.sperms.dao.model.Product" >
    <id column="pro_id" property="proId" jdbcType="VARCHAR" />
    <result column="pro_name" property="proName" jdbcType="VARCHAR" />
    <result column="pro_type" property="proType" jdbcType="VARCHAR" />
    <result column="pro_size" property="proSize" jdbcType="VARCHAR" />
    <result column="pro_material" property="proMaterial" jdbcType="VARCHAR" />
    <result column="pro_length" property="proLength" jdbcType="DOUBLE" />
    <result column="pro_weight_std" property="proWeightStd" jdbcType="DOUBLE" />
    <result column="pro_weight_actual" property="proWeightActual" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    pro_id, pro_name, pro_type, pro_size, pro_material, pro_length, pro_weight_std, pro_weight_actual
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.smart.sperms.dao.model.ProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from product
    where pro_id = #{proId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from product
    where pro_id = #{proId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.smart.sperms.dao.model.ProductExample" >
    delete from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.smart.sperms.dao.model.Product" >
    insert into product (pro_id, pro_name, pro_type, 
      pro_size, pro_material, pro_length, 
      pro_weight_std, pro_weight_actual)
    values (#{proId,jdbcType=VARCHAR}, #{proName,jdbcType=VARCHAR}, #{proType,jdbcType=VARCHAR}, 
      #{proSize,jdbcType=VARCHAR}, #{proMaterial,jdbcType=VARCHAR}, #{proLength,jdbcType=DOUBLE}, 
      #{proWeightStd,jdbcType=DOUBLE}, #{proWeightActual,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.smart.sperms.dao.model.Product" >
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="proId != null" >
        pro_id,
      </if>
      <if test="proName != null" >
        pro_name,
      </if>
      <if test="proType != null" >
        pro_type,
      </if>
      <if test="proSize != null" >
        pro_size,
      </if>
      <if test="proMaterial != null" >
        pro_material,
      </if>
      <if test="proLength != null" >
        pro_length,
      </if>
      <if test="proWeightStd != null" >
        pro_weight_std,
      </if>
      <if test="proWeightActual != null" >
        pro_weight_actual,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="proId != null" >
        #{proId,jdbcType=VARCHAR},
      </if>
      <if test="proName != null" >
        #{proName,jdbcType=VARCHAR},
      </if>
      <if test="proType != null" >
        #{proType,jdbcType=VARCHAR},
      </if>
      <if test="proSize != null" >
        #{proSize,jdbcType=VARCHAR},
      </if>
      <if test="proMaterial != null" >
        #{proMaterial,jdbcType=VARCHAR},
      </if>
      <if test="proLength != null" >
        #{proLength,jdbcType=DOUBLE},
      </if>
      <if test="proWeightStd != null" >
        #{proWeightStd,jdbcType=DOUBLE},
      </if>
      <if test="proWeightActual != null" >
        #{proWeightActual,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.smart.sperms.dao.model.ProductExample" resultType="java.lang.Integer" >
    select count(*) from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update product
    <set >
      <if test="record.proId != null" >
        pro_id = #{record.proId,jdbcType=VARCHAR},
      </if>
      <if test="record.proName != null" >
        pro_name = #{record.proName,jdbcType=VARCHAR},
      </if>
      <if test="record.proType != null" >
        pro_type = #{record.proType,jdbcType=VARCHAR},
      </if>
      <if test="record.proSize != null" >
        pro_size = #{record.proSize,jdbcType=VARCHAR},
      </if>
      <if test="record.proMaterial != null" >
        pro_material = #{record.proMaterial,jdbcType=VARCHAR},
      </if>
      <if test="record.proLength != null" >
        pro_length = #{record.proLength,jdbcType=DOUBLE},
      </if>
      <if test="record.proWeightStd != null" >
        pro_weight_std = #{record.proWeightStd,jdbcType=DOUBLE},
      </if>
      <if test="record.proWeightActual != null" >
        pro_weight_actual = #{record.proWeightActual,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update product
    set pro_id = #{record.proId,jdbcType=VARCHAR},
      pro_name = #{record.proName,jdbcType=VARCHAR},
      pro_type = #{record.proType,jdbcType=VARCHAR},
      pro_size = #{record.proSize,jdbcType=VARCHAR},
      pro_material = #{record.proMaterial,jdbcType=VARCHAR},
      pro_length = #{record.proLength,jdbcType=DOUBLE},
      pro_weight_std = #{record.proWeightStd,jdbcType=DOUBLE},
      pro_weight_actual = #{record.proWeightActual,jdbcType=DOUBLE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.smart.sperms.dao.model.Product" >
    update product
    <set >
      <if test="proName != null" >
        pro_name = #{proName,jdbcType=VARCHAR},
      </if>
      <if test="proType != null" >
        pro_type = #{proType,jdbcType=VARCHAR},
      </if>
      <if test="proSize != null" >
        pro_size = #{proSize,jdbcType=VARCHAR},
      </if>
      <if test="proMaterial != null" >
        pro_material = #{proMaterial,jdbcType=VARCHAR},
      </if>
      <if test="proLength != null" >
        pro_length = #{proLength,jdbcType=DOUBLE},
      </if>
      <if test="proWeightStd != null" >
        pro_weight_std = #{proWeightStd,jdbcType=DOUBLE},
      </if>
      <if test="proWeightActual != null" >
        pro_weight_actual = #{proWeightActual,jdbcType=DOUBLE},
      </if>
    </set>
    where pro_id = #{proId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.smart.sperms.dao.model.Product" >
    update product
    set pro_name = #{proName,jdbcType=VARCHAR},
      pro_type = #{proType,jdbcType=VARCHAR},
      pro_size = #{proSize,jdbcType=VARCHAR},
      pro_material = #{proMaterial,jdbcType=VARCHAR},
      pro_length = #{proLength,jdbcType=DOUBLE},
      pro_weight_std = #{proWeightStd,jdbcType=DOUBLE},
      pro_weight_actual = #{proWeightActual,jdbcType=DOUBLE}
    where pro_id = #{proId,jdbcType=VARCHAR}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.smart.sperms.dao.model.ProductExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>